{\rtf1\ansi\deflang1033{\fonttbl{\f35\fcharset0 Courier New;}{\f232\fcharset0 Times New Roman;}}{\colortbl;\red0\green0\blue255;}{\stylesheet{\snext0\f232\fs22\fi0\li0\ri0\ql\widctlpar{\*\stloverrides\f232\fs22\widctlpar} Normal;}{\s1\sbasedon4\snext4\f232\fs28\b\kerning28\fi0\li0\ri0\ql\keepn\sb120\sa200\ls1{\*\stloverrides\fs28\b\kerning28\keepn\sb120\sa200\outlinelevel0\ls1\ilvl0} heading 1;}{\s2\sbasedon4\snext4\f232\fs24\b\fi0\li0\ri0\ql\keepn\sb60\sa120\ls1\ilvl1{\*\stloverrides\fs24\b\keepn\sb60\sa120\outlinelevel1\ls1\ilvl1} heading 2;}{\s3\sbasedon4\snext4\f232\fs22\b\fi0\li0\ri0\ql\keepn\sb240\sa60\ls1\ilvl2{\*\stloverrides\b\keepn\sb240\sa60\outlinelevel2\ls1\ilvl2} heading 3;}{\s4\snext4\f232\fs22\fi0\li0\ri0\ql\sa120{\*\stloverrides\f232\fs22\sa120} Text Body;}{\s5\sbasedon0\snext5\f232\fs24\b\fi0\li0\ri0\qc\keepn\widctlpar\sb120{\*\stloverrides\fs24\b\qc\keepn\sb120} TOC Title;}{\s6\sbasedon0\snext6\f232\fs22\fi0\li0\ri0\ql\widctlpar{\*\stloverrides} toc 1;}{\s7\sbasedon0\snext7\f232\fs22\fi0\li240\ri0\ql\widctlpar{\*\stloverrides\li240} toc 2;}{\s8\sbasedon0\snext8\f232\fs22\fi0\li480\ri0\ql\widctlpar{\*\stloverrides\li480} toc 3;}{\*\cs9\additive Default Paragraph Font;}{\*\cs10\additive\sbasedon9\super Footnote Reference;}{\*\cs11\additive\sbasedon9\super Endnote Reference;}}{\*\listtable{\list{\listlevel\levelstartat1\levelnfc0\leveljc0{\leveltext \'02\'00.;}{\levelnumbers \'01;}\levelfollow0\fi-432\li432}{\listlevel\levelstartat1\levelnfc0\leveljc0{\leveltext \'04\'00.\'01.;}{\levelnumbers \'01\'03;}\levelfollow0\fi-432\li432}{\listlevel\levelstartat1\levelnfc0\leveljc0{\leveltext \'06\'00.\'01.\'02.;}{\levelnumbers \'01\'03\'05;}\levelfollow0\fi-360\li1080}{\listlevel\levelstartat1\levelnfc0\leveljc0{\leveltext \'03(\'03);}{\levelnumbers \'02;}\levelfollow0\fi-360\li1440}{\listlevel\levelstartat1\levelnfc4\leveljc0{\leveltext \'03(\'04);}{\levelnumbers \'02;}\levelfollow0\fi-360\li1800}{\listlevel\levelstartat1\levelnfc2\leveljc0{\leveltext \'03(\'05);}{\levelnumbers \'02;}\levelfollow0\fi-360\li2160}{\listlevel\levelstartat1\levelnfc0\leveljc0{\leveltext \'02\'06.;}{\levelnumbers \'01;}\levelfollow0\fi-360\li2520}{\listlevel\levelstartat1\levelnfc4\leveljc0{\leveltext \'02\'07.;}{\levelnumbers \'01;}\levelfollow0\fi-360\li2880}{\listlevel\levelstartat1\levelnfc2\leveljc0{\leveltext \'02\'08.;}{\levelnumbers \'01;}\levelfollow0\fi-360\li3240}\listid65536}{\list\listsimple{\listlevel\levelstartat1\levelnfc0\leveljc0{\leveltext \'02\'00.;}{\levelnumbers \'01;}\levelfollow0\fi-360\li720}\listid65537}}{\*\listoverridetable{\listoverride\listid65536\listoverridecount0\ls1}{\listoverride\listid65537\listoverridecount0\ls2}}{\*\generator Atlantis Word Processor 2.0.6.0;}{\info{\creatim\yr2018\mo9\dy12\hr16\min8\sec20}{\revtim\yr2018\mo9\dy12\hr20\min37\sec8}{\author JP}\dskparnr59\dskcharnr112}\viewscale110\htmautsp\useltbaln\alntblind\ftnbj\ftnnar\aenddoc\aftnnrlc\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\pgndec\pgncont\sftnbj\sftnstart1\sftnrstcont\sftnnar\saftnstart1\saftnrstcont\saftnnrlc\sectfullsaved\fet0\pard\plain\f232\fs24\qc\nowidctlpar\widctlpar\fs40\InputReplace Plugin for jEdit\\fs22\\\ql\s6{\*\bkmkstart _Table_Of_Contents}{{\field{\*\fldinst{\f232  TOC \\h \\o "1-3" \\n }}{\fldrslt{\f232{{\field{\*\fldinst{\f232  HYPERLINK \\l "Overview" }}{\fldrslt{\f232 1. Overview}}}}\{{\field{\*\fldinst{\f232  HYPERLINK \\l "Download" }}{\fldrslt{\f232 2. Download}}}}\{{\field{\*\fldinst{\f232  HYPERLINK \\l "Defining_the_Replacement_Table_and_User" }}{\fldrslt{\f232 3. Defining the Replacement Table and User Functions}}}}\\li240\s7{{\field{\*\fldinst{\f232  HYPERLINK \\l "Replacement_Table" }}{\fldrslt{\f232 3.1. Replacement Table}}}}\{{\field{\*\fldinst{\f232  HYPERLINK \\l "User_Functions" }}{\fldrslt{\f232 3.2. User Functions}}}}\{{\field{\*\fldinst{\f232  HYPERLINK \\l "Reloading" }}{\fldrslt{\f232 3.3. Reloading}}}}\\li0\s6{{\field{\*\fldinst{\f232  HYPERLINK \\l "Plugin_Operation" }}{\fldrslt{\f232 4. Plugin Operation}}}}\}}}}{\*\bkmkend _Table_Of_Contents}\s0\\{\listtext\pard\plain\f232\fs24\jclisttab\tx432\fs28\b\kerning28\u49?\u46?\tab}\pard\fi-432\li432\keepn\sb120\sa200\s1\jclisttab\tx432\ls1{\*\bkmkstart Overview}\fs28\b\kerning28 Overview{\*\bkmkend Overview}\\pard\sa120\s4\fs22\b0\kerning0 The InputReplace plugin provides a facility for expanding input character sequences into replacement text, similar to abbreviations but without the requirement of expanding a whole word at a time. It is useful for inserting characters not found in your keyboard layout, such as turning {\f35 e'} into {\f35 é} or {\f35 c/} into {\f35 ¢}. \The primary advantage over jEdit's built-in abbreviations is that these replacements can be used {\i within} words, rather than just with whole words.\This allows you to define, say, a single replacement {\f35 e' \u8594? é} and use it to quickly enter both café and débutante. To enter café, you would type {\f35 cafe'} and activate "Input Replace at Caret" after the whole word; to enter débutante, you would type {\f35 de'}, activate "Input Replace at Caret", and then finish typing the word.\You can, of course, define whole words as input and replacement text, as with abbreviations (though without any positional parameters).\I recommend binding "Input Replace at Caret" to an easy key-combination, since you'll need to activate it often, if you write a lot of accented text.\One can also define BeanShell functions to perform more complicated replacements, for instance turning characters into codepoints and vice-versa:\\f35   "(É)U-"    \u8594? "0xC9"\line   "(0xC9)U+" \u8594? "É"\\f232 or converting numbers to and from hex:\\f35   "(5314)0x"    \u8594? 0x14c2\line   "(0xBE415)0x" \u8594? 779285\\f232 Such things can accomplished with other plugins or macros, but using the InputReplace framework to write custom transformations lets you assign simple names to those transformations\emdash like "{\f35 U+}" and "{\f35 0x}" above\emdash and also write the BeanShell code without dealing with the jEdit API (each transformation is a simple String\u8594?String function).\\{\listtext\pard\plain\f232\fs24\jclisttab\tx432\fs28\b\kerning28\u50?\u46?\tab}\fi-432\li432\keepn\sb120\sa200\s1\jclisttab\tx432\ls1{\*\bkmkstart Download}\fs28\b\kerning28 Download{\*\bkmkend Download}\\pard\sa120\s4\fs22\b0\kerning0 The easiest way to get the InputReplace plugin is to use jEdit's Plugin Manager (once the plugin is released). You can also manually download the jar for this plugin from:\\tab{\cf1{\field{\*\fldinst{\f232  HYPERLINK "https://jessepav.github.io/jedit-plugins/InputReplace.jar" }}{\fldrslt{\f232\cf1 [Download JAR from GitHub]}}}}\cf1\cf0\\{\listtext\pard\plain\f232\fs24\jclisttab\tx432\fs28\b\kerning28\u51?\u46?\tab}\fi-432\li432\keepn\sb120\sa200\s1\jclisttab\tx432\ls1{\*\bkmkstart Defining_the_Replacement_Table_and_User}\fs28\b\kerning28 Defining the Replacement Table and User Functions{\*\bkmkend Defining_the_Replacement_Table_and_User}\\pard\sa120\s4\fs22\b0\kerning0 When you first install the plugin, a default replacement table will be set up, as well as a few BeanShell functions that you can use in your replacements. The table and user functions can be edited by the "Edit Replacement Table" and "Edit User Functions" actions in the Plugins menu.\\{\listtext\pard\plain\f232\fs24\jclisttab\tx432\b\u51?\u46?\u49?\u46?\tab}\fi-432\li432\keepn\sb60\s2\jclisttab\tx432\ls1\ilvl1{\*\bkmkstart Replacement_Table}\fs24\b Replacement Table{\*\bkmkend Replacement_Table}\\pard\sa120\s4\fs22\b0 The format of the replacement table is given in the table text file itself, but is copied here for reference:\\sa0\f35\fs18 # This file maps input strings to character compositions, like a simple\# input method. Only non-whitespace characters may be used for the input\# string (the replacement text may contain whitespace). The format of the\# table is a series of lines, where the input strings appear at the start\# of each line, followed by whitespace, and then the output string. Lines\# that are JUST a hash mark, or that begin with a hash AND a space, are\# comments (since abbreviations are at minimum two characters long, this\# doesn't affect the table at all). Lines that are all whitespace are\# ignored.\#\# Instead of a replacement string, you can use a special notation,\# U+HHHH or U+10HHHH to represent a Unicode character expressed in hex.\#\# You can also use a special form as the replacement string, which is\#      (<function name>)FUNC\# which will use BeanShell to evaluation <function name>, passing in as\# an argument the text in the document contained between '(' and ')'.\# Actually, the parentheses can be any characters, and the document text\# will be scanned to find the opening and closing delimeters. Example:\#   FB    |foobar|FUNC\# will match the document form |analyze|FB, and call foobar("analyze")\\fs20\\sa120\f232\fs22 Looking at the default replacement table will give you a good idea of its use: {\cf1{\field{\*\fldinst{\f232  HYPERLINK "https://github.com/jessepav/jedit-plugins/blob/master/InputReplace/resources/input-replace-table-default.txt" }}{\fldrslt{\f232\cf1 [View on GitHub]}}}}\cf1\cf0\\fs20\{\listtext\pard\plain\f232\fs24\jclisttab\tx432\b\u51?\u46?\u50?\u46?\tab}\fi-432\li432\keepn\sb60\s2\jclisttab\tx432\ls1\ilvl1{\*\bkmkstart User_Functions}\fs24\b User Functions{\*\bkmkend User_Functions}\\pard\sa120\s4\fs22\b0 The BeanShell script installed with the plugin provide examples of how your own functions could be structured: each function takes one parameter, a String representing the input, and returns a transformed String. You then reference it in the replacement table using the "{\f35 (<function\~name>)FUNC}" syntax.\The default user function script can be seen here: {\cf1{\field{\*\fldinst{\f232  HYPERLINK "https://github.com/jessepav/jedit-plugins/blob/master/InputReplace/resources/input-replace-functions-default.bsh" }}{\fldrslt{\f232\cf1 [View on GitHub]}}}}\cf1\cf0\\fs20\{\listtext\pard\plain\f232\fs24\jclisttab\tx432\b\u51?\u46?\u51?\u46?\tab}\fi-432\li432\keepn\sb60\s2\jclisttab\tx432\ls1\ilvl1{\*\bkmkstart Reloading}\fs24\b Reloading{\*\bkmkend Reloading}\\pard\sa120\s4\fs22\b0 When you change the replacement table or user-function script, you'll need to use the "Reload Table and Functions" action to have the plugin load your changes.\\{\listtext\pard\plain\f232\fs24\jclisttab\tx432\fs28\b\kerning28\u52?\u46?\tab}\fi-432\li432\keepn\sb120\sa200\s1\jclisttab\tx432\ls1{\*\bkmkstart Plugin_Operation}\fs28\b\kerning28 Plugin Operation{\*\bkmkend Plugin_Operation}\\pard\sa120\s4\fs22\b0\kerning0 The way that the "Input Replace at Caret" action works is primarily what differentiates this plugin from abbreviations. Instead of examining the previous word, it operates on non-whitespace characters in this fashion:\{\listtext\pard\plain\f232\fs24\jclisttab\tx720\fs22\u49?\u46?\tab}\fi-360\li720\sa40\jclisttab\tx720\ls2 Set the {\i point} to {\f35 max-length} characters before the caret. {\f35 max-length} is settable in Plugin Options, and defaults to 8.\{\listtext\pard\plain\f232\fs24\jclisttab\tx720\fs22\u50?\u46?\tab}Check if the text between the point and the caret has an entry in the replacement table; if so, perform the replacement and we're done.\{\listtext\pard\plain\f232\fs24\jclisttab\tx720\fs22\u51?\u46?\tab}Otherwise, if there are still more than 2 characters between the point and caret, advance the point one character and try again. (The minimum length of a replacement entry is 2 characters)\\pard\sa40\s4\\\li6480 Jesse Pavel\line jpavel@alum.mit.edu\line September, 2018\\li0\sa120\}